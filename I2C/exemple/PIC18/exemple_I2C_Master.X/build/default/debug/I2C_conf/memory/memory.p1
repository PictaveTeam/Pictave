Version 4.0 HI-TECH Software Intermediate Code
"47 I2C_conf/memory/memory.h
[; ;I2C_conf/memory/memory.h: 47: {
[s S2 `*uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S2 . Pointer PointerSize State ID indice ]
"62
[; ;I2C_conf/memory/memory.h: 62: {
[s S4 `S2 -> 10 `i `uc 1 ]
[n S4 . Tab indice ]
"56
[; ;I2C_conf/memory/memory.h: 56: {
[s S3 `uc -> 64 `i `uc 1 ]
[n S3 . pile use ]
"75
[; ;I2C_conf/memory/memory.h: 75: void getFreeFull(u8 memoryNumber);
[v _getFreeFull `(v ~T0 @X0 0 ef1`uc ]
"27 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\c99\string.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\c99\string.h: 27: void *memcpy (void *restrict, const void *restrict, size_t);
[v _memcpy `(*v ~T0 @X0 0 ef3`*v`*Cv`ui ]
"26 I2C_conf/memory/memory.c
[; ;I2C_conf/memory/memory.c: 26: t_tabPoint array[2];
[v _array `S4 ~T0 @X0 -> 2 `i e ]
"27
[; ;I2C_conf/memory/memory.c: 27: t_memory memory[2];
[v _memory `S3 ~T0 @X0 -> 2 `i e ]
"28
[; ;I2C_conf/memory/memory.c: 28: u8 *nulPointer;
[v _nulPointer `*uc ~T0 @X0 1 e ]
"29
[; ;I2C_conf/memory/memory.c: 29: u8 myMemID[2];
[v _myMemID `uc ~T0 @X0 -> 2 `i e ]
"47
[; ;I2C_conf/memory/memory.c: 47: void memory_init(void)
[v _memory_init `(v ~T0 @X0 1 ef ]
"48
[; ;I2C_conf/memory/memory.c: 48: {
{
[e :U _memory_init ]
[f ]
"49
[; ;I2C_conf/memory/memory.c: 49:     nulPointer = ((void*)0);
[e = _nulPointer -> -> -> 0 `i `*v `*uc ]
"50
[; ;I2C_conf/memory/memory.c: 50:     getFreeFull(0);
[e ( _getFreeFull (1 -> -> 0 `i `uc ]
"51
[; ;I2C_conf/memory/memory.c: 51:     getFreeFull(1);
[e ( _getFreeFull (1 -> -> 1 `i `uc ]
"52
[; ;I2C_conf/memory/memory.c: 52: }
[e :UE 5 ]
}
"72
[; ;I2C_conf/memory/memory.c: 72: u8* myMalloc(u8 sizeData,u8 memoryNumber)
[v _myMalloc `(*uc ~T0 @X0 1 ef2`uc`uc ]
"73
[; ;I2C_conf/memory/memory.c: 73: {
{
[e :U _myMalloc ]
"72
[; ;I2C_conf/memory/memory.c: 72: u8* myMalloc(u8 sizeData,u8 memoryNumber)
[v _sizeData `uc ~T0 @X0 1 r1 ]
[v _memoryNumber `uc ~T0 @X0 1 r2 ]
"73
[; ;I2C_conf/memory/memory.c: 73: {
[f ]
"74
[; ;I2C_conf/memory/memory.c: 74:     if((memory[memoryNumber].use + sizeData) > (64 -1))
[e $ ! > + -> . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 1 `i -> _sizeData `i - -> 64 `i -> 1 `i 7  ]
"75
[; ;I2C_conf/memory/memory.c: 75:             return ((void*)0);
[e ) -> -> -> 0 `i `*v `*uc ]
[e $UE 6  ]
[e :U 7 ]
"76
[; ;I2C_conf/memory/memory.c: 76:     memory[memoryNumber].use += sizeData;
[e =+ . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 1 -> _sizeData `uc ]
"77
[; ;I2C_conf/memory/memory.c: 77:     return &memory[memoryNumber].pile[memory[memoryNumber].use - sizeData];
[e ) &U *U + &U . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 0 * -> -> - -> . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 1 `i -> _sizeData `i `ui `ux -> -> # *U &U . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 0 `ui `ux ]
[e $UE 6  ]
"78
[; ;I2C_conf/memory/memory.c: 78: }
[e :UE 6 ]
}
"96
[; ;I2C_conf/memory/memory.c: 96: t_mem getMemoryPointer(u8 sizeData, u8 memoryNumber)
[v _getMemoryPointer `(**uc ~T0 @X0 1 ef2`uc`uc ]
"97
[; ;I2C_conf/memory/memory.c: 97: {
{
[e :U _getMemoryPointer ]
"96
[; ;I2C_conf/memory/memory.c: 96: t_mem getMemoryPointer(u8 sizeData, u8 memoryNumber)
[v _sizeData `uc ~T0 @X0 1 r1 ]
[v _memoryNumber `uc ~T0 @X0 1 r2 ]
"97
[; ;I2C_conf/memory/memory.c: 97: {
[f ]
"98
[; ;I2C_conf/memory/memory.c: 98:     t_mem dP;
[v _dP `**uc ~T0 @X0 1 a ]
"99
[; ;I2C_conf/memory/memory.c: 99:     u8 i;
[v _i `uc ~T0 @X0 1 a ]
"100
[; ;I2C_conf/memory/memory.c: 100:     u8 indice;
[v _indice `uc ~T0 @X0 1 a ]
"101
[; ;I2C_conf/memory/memory.c: 101:     if(array[memoryNumber].indice >= 10)
[e $ ! >= -> . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 1 `i -> 10 `i 9  ]
"102
[; ;I2C_conf/memory/memory.c: 102:     {
{
"103
[; ;I2C_conf/memory/memory.c: 103:         dP = &nulPointer;
[e = _dP &U _nulPointer ]
"104
[; ;I2C_conf/memory/memory.c: 104:         return dP;
[e ) _dP ]
[e $UE 8  ]
"105
[; ;I2C_conf/memory/memory.c: 105:     }
}
[e :U 9 ]
"107
[; ;I2C_conf/memory/memory.c: 107:     u8 *Pointer;
[v _Pointer `*uc ~T0 @X0 1 a ]
"108
[; ;I2C_conf/memory/memory.c: 108:     Pointer = myMalloc(sizeData, memoryNumber);
[e = _Pointer ( _myMalloc (2 , _sizeData _memoryNumber ]
"109
[; ;I2C_conf/memory/memory.c: 109:     if(Pointer == ((void*)0))
[e $ ! == _Pointer -> -> -> 0 `i `*v `*uc 10  ]
"110
[; ;I2C_conf/memory/memory.c: 110:     {
{
"111
[; ;I2C_conf/memory/memory.c: 111:         dP = &nulPointer;
[e = _dP &U _nulPointer ]
"112
[; ;I2C_conf/memory/memory.c: 112:         return dP;
[e ) _dP ]
[e $UE 8  ]
"113
[; ;I2C_conf/memory/memory.c: 113:     }
}
[e :U 10 ]
"114
[; ;I2C_conf/memory/memory.c: 114:     myMemID[memoryNumber]++;
[e ++ *U + &U _myMemID * -> _memoryNumber `ux -> -> # *U &U _myMemID `ui `ux -> -> 1 `i `uc ]
"115
[; ;I2C_conf/memory/memory.c: 115:     if(myMemID[memoryNumber] == 0)
[e $ ! == -> *U + &U _myMemID * -> _memoryNumber `ux -> -> # *U &U _myMemID `ui `ux `i -> 0 `i 11  ]
"116
[; ;I2C_conf/memory/memory.c: 116:         myMemID[memoryNumber]++;
[e ++ *U + &U _myMemID * -> _memoryNumber `ux -> -> # *U &U _myMemID `ui `ux -> -> 1 `i `uc ]
[e :U 11 ]
"117
[; ;I2C_conf/memory/memory.c: 117:     for(i = 0; i < 10; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 12  ]
[e $U 13  ]
[e :U 12 ]
"118
[; ;I2C_conf/memory/memory.c: 118:     {
{
"119
[; ;I2C_conf/memory/memory.c: 119:         if(array[memoryNumber].Tab[i].State == 0)
[e $ ! == -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 2 `i -> 0 `i 15  ]
"120
[; ;I2C_conf/memory/memory.c: 120:         {
{
"121
[; ;I2C_conf/memory/memory.c: 121:             array[memoryNumber].Tab[i].Pointer = Pointer;
[e = . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 0 _Pointer ]
"122
[; ;I2C_conf/memory/memory.c: 122:             array[memoryNumber].Tab[i].PointerSize = sizeData;
[e = . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 1 _sizeData ]
"123
[; ;I2C_conf/memory/memory.c: 123:             array[memoryNumber].Tab[i].State = 1;
[e = . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 2 -> -> 1 `i `uc ]
"124
[; ;I2C_conf/memory/memory.c: 124:             array[memoryNumber].Tab[i].ID = myMemID[memoryNumber];
[e = . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 3 *U + &U _myMemID * -> _memoryNumber `ux -> -> # *U &U _myMemID `ui `ux ]
"125
[; ;I2C_conf/memory/memory.c: 125:             array[memoryNumber].Tab[i].indice = (memory[memoryNumber].use - sizeData);
[e = . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 4 -> - -> . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 1 `i -> _sizeData `i `uc ]
"126
[; ;I2C_conf/memory/memory.c: 126:             indice = i;
[e = _indice _i ]
"127
[; ;I2C_conf/memory/memory.c: 127:             break;
[e $U 13  ]
"128
[; ;I2C_conf/memory/memory.c: 128:         }
}
[e :U 15 ]
"129
[; ;I2C_conf/memory/memory.c: 129:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 12  ]
[e :U 13 ]
}
"130
[; ;I2C_conf/memory/memory.c: 130:     array[memoryNumber].indice++;
[e ++ . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 1 -> -> 1 `i `uc ]
"131
[; ;I2C_conf/memory/memory.c: 131:     dP = &array[memoryNumber].Tab[indice].Pointer;
[e = _dP &U . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 0 ]
"132
[; ;I2C_conf/memory/memory.c: 132:     return dP;
[e ) _dP ]
[e $UE 8  ]
"133
[; ;I2C_conf/memory/memory.c: 133: }
[e :UE 8 ]
}
"152
[; ;I2C_conf/memory/memory.c: 152: void getFree(t_mem Pointer, u8 memoryNumber)
[v _getFree `(v ~T0 @X0 1 ef2`**uc`uc ]
"153
[; ;I2C_conf/memory/memory.c: 153: {
{
[e :U _getFree ]
"152
[; ;I2C_conf/memory/memory.c: 152: void getFree(t_mem Pointer, u8 memoryNumber)
[v _Pointer `**uc ~T0 @X0 1 r1 ]
[v _memoryNumber `uc ~T0 @X0 1 r2 ]
"153
[; ;I2C_conf/memory/memory.c: 153: {
[f ]
"154
[; ;I2C_conf/memory/memory.c: 154:     if(*Pointer != ((void*)0))
[e $ ! != *U _Pointer -> -> -> 0 `i `*v `*uc 17  ]
"155
[; ;I2C_conf/memory/memory.c: 155:     {
{
"156
[; ;I2C_conf/memory/memory.c: 156:         u8 i;
[v _i `uc ~T0 @X0 1 a ]
"157
[; ;I2C_conf/memory/memory.c: 157:         u8 *tabPoint;
[v _tabPoint `*uc ~T0 @X0 1 a ]
"158
[; ;I2C_conf/memory/memory.c: 158:         u8 tab[64];
[v _tab `uc ~T0 @X0 -> 64 `i a ]
"159
[; ;I2C_conf/memory/memory.c: 159:         memcpy(tab , memory[memoryNumber].pile, 64);
[e ( _memcpy (3 , , -> &U _tab `*v -> &U . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 0 `*Cv -> -> 64 `i `ui ]
"160
[; ;I2C_conf/memory/memory.c: 160:         u8 indice = 0;
[v _indice `uc ~T0 @X0 1 a ]
[e = _indice -> -> 0 `i `uc ]
"161
[; ;I2C_conf/memory/memory.c: 161:         for(i = 0; i < 10 ; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 18  ]
[e $U 19  ]
[e :U 18 ]
"162
[; ;I2C_conf/memory/memory.c: 162:         {
{
"163
[; ;I2C_conf/memory/memory.c: 163:             if(Pointer == &array[memoryNumber].Tab[i].Pointer)
[e $ ! == _Pointer &U . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 0 21  ]
"164
[; ;I2C_conf/memory/memory.c: 164:             {
{
"165
[; ;I2C_conf/memory/memory.c: 165:                 indice = i;
[e = _indice _i ]
"166
[; ;I2C_conf/memory/memory.c: 166:                 break;
[e $U 19  ]
"167
[; ;I2C_conf/memory/memory.c: 167:             }
}
[e :U 21 ]
"168
[; ;I2C_conf/memory/memory.c: 168:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 18  ]
[e :U 19 ]
}
"169
[; ;I2C_conf/memory/memory.c: 169:         for(i = 0; i < 10 ; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 22  ]
[e $U 23  ]
[e :U 22 ]
"170
[; ;I2C_conf/memory/memory.c: 170:         {
{
"171
[; ;I2C_conf/memory/memory.c: 171:             if((array[memoryNumber].Tab[i].indice > array[memoryNumber].Tab[indice].indice) && (array[memoryNumber].Tab[i].State == 1))
[e $ ! && > -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 4 `i -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 4 `i == -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 2 `i -> 1 `i 25  ]
"172
[; ;I2C_conf/memory/memory.c: 172:             {
{
"173
[; ;I2C_conf/memory/memory.c: 173:                 tabPoint = &tab[array[memoryNumber].Tab[indice].indice];
[e = _tabPoint &U *U + &U _tab * -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 4 `ux -> -> # *U &U _tab `ui `ux ]
"174
[; ;I2C_conf/memory/memory.c: 174:                 memcpy(tabPoint , array[memoryNumber].Tab[i].Pointer, 64 - array[memoryNumber].Tab[i].indice);
[e ( _memcpy (3 , , -> _tabPoint `*v -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 0 `*Cv -> - -> 64 `i -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 4 `i `ui ]
"175
[; ;I2C_conf/memory/memory.c: 175:                 memcpy(memory[memoryNumber].pile , tab, 64);
[e ( _memcpy (3 , , -> &U . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 0 `*v -> &U _tab `*Cv -> -> 64 `i `ui ]
"176
[; ;I2C_conf/memory/memory.c: 176:                 break;
[e $U 23  ]
"177
[; ;I2C_conf/memory/memory.c: 177:             }
}
[e :U 25 ]
"178
[; ;I2C_conf/memory/memory.c: 178:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 22  ]
[e :U 23 ]
}
"179
[; ;I2C_conf/memory/memory.c: 179:         for(i = 0; i < 10 ; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 26  ]
[e $U 27  ]
[e :U 26 ]
"180
[; ;I2C_conf/memory/memory.c: 180:         {
{
"181
[; ;I2C_conf/memory/memory.c: 181:             if((array[memoryNumber].Tab[i].indice > array[memoryNumber].Tab[indice].indice ) && (array[memoryNumber].Tab[i].State == 1))
[e $ ! && > -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 4 `i -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 4 `i == -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 2 `i -> 1 `i 29  ]
"182
[; ;I2C_conf/memory/memory.c: 182:             {
{
"183
[; ;I2C_conf/memory/memory.c: 183:                 array[memoryNumber].Tab[i].indice -= array[memoryNumber].Tab[indice].PointerSize;
[e =- . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 4 -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 1 `uc ]
"184
[; ;I2C_conf/memory/memory.c: 184:                 array[memoryNumber].Tab[i].Pointer = &memory[memoryNumber].pile[array[memoryNumber].Tab[i].indice];
[e = . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 0 &U *U + &U . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 0 * -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 4 `ux -> -> # *U &U . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 0 `ui `ux ]
"185
[; ;I2C_conf/memory/memory.c: 185:             }
}
[e :U 29 ]
"186
[; ;I2C_conf/memory/memory.c: 186:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 26  ]
[e :U 27 ]
}
"187
[; ;I2C_conf/memory/memory.c: 187:         array[memoryNumber].Tab[indice].State = 0;
[e = . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 2 -> -> 0 `i `uc ]
"188
[; ;I2C_conf/memory/memory.c: 188:         array[memoryNumber].indice--;
[e -- . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 1 -> -> 1 `i `uc ]
"189
[; ;I2C_conf/memory/memory.c: 189:         memory[memoryNumber].use -= array[memoryNumber].Tab[indice].PointerSize;
[e =- . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 1 -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 1 `uc ]
"190
[; ;I2C_conf/memory/memory.c: 190:     }
}
[e :U 17 ]
"191
[; ;I2C_conf/memory/memory.c: 191: }
[e :UE 16 ]
}
"211
[; ;I2C_conf/memory/memory.c: 211: int GetMemorySize(t_mem Pointer, u8 memoryNumber)
[v _GetMemorySize `(i ~T0 @X0 1 ef2`**uc`uc ]
"212
[; ;I2C_conf/memory/memory.c: 212: {
{
[e :U _GetMemorySize ]
"211
[; ;I2C_conf/memory/memory.c: 211: int GetMemorySize(t_mem Pointer, u8 memoryNumber)
[v _Pointer `**uc ~T0 @X0 1 r1 ]
[v _memoryNumber `uc ~T0 @X0 1 r2 ]
"212
[; ;I2C_conf/memory/memory.c: 212: {
[f ]
"213
[; ;I2C_conf/memory/memory.c: 213:     if(*Pointer == ((void*)0))
[e $ ! == *U _Pointer -> -> -> 0 `i `*v `*uc 31  ]
"214
[; ;I2C_conf/memory/memory.c: 214:         return (-1);
[e ) -U -> 1 `i ]
[e $UE 30  ]
[e :U 31 ]
"215
[; ;I2C_conf/memory/memory.c: 215:     u8 i;
[v _i `uc ~T0 @X0 1 a ]
"216
[; ;I2C_conf/memory/memory.c: 216:     u8 indice = 10 + 1;
[v _indice `uc ~T0 @X0 1 a ]
[e = _indice -> + -> 10 `i -> 1 `i `uc ]
"217
[; ;I2C_conf/memory/memory.c: 217:     for(i = 0; i < 10 ; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 32  ]
[e $U 33  ]
[e :U 32 ]
"218
[; ;I2C_conf/memory/memory.c: 218:     {
{
"219
[; ;I2C_conf/memory/memory.c: 219:         if(Pointer == &array[memoryNumber].Tab[i].Pointer)
[e $ ! == _Pointer &U . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 0 35  ]
"220
[; ;I2C_conf/memory/memory.c: 220:         {
{
"221
[; ;I2C_conf/memory/memory.c: 221:             indice = i;
[e = _indice _i ]
"222
[; ;I2C_conf/memory/memory.c: 222:             break;
[e $U 33  ]
"223
[; ;I2C_conf/memory/memory.c: 223:         }
}
[e :U 35 ]
"224
[; ;I2C_conf/memory/memory.c: 224:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 32  ]
[e :U 33 ]
}
"225
[; ;I2C_conf/memory/memory.c: 225:     if(indice == (10 + 1))
[e $ ! == -> _indice `i + -> 10 `i -> 1 `i 36  ]
"226
[; ;I2C_conf/memory/memory.c: 226:         return (-1);
[e ) -U -> 1 `i ]
[e $UE 30  ]
[e :U 36 ]
"227
[; ;I2C_conf/memory/memory.c: 227:     if(array[memoryNumber].Tab[indice].State == 0)
[e $ ! == -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 2 `i -> 0 `i 37  ]
"228
[; ;I2C_conf/memory/memory.c: 228:         return (-1);
[e ) -U -> 1 `i ]
[e $UE 30  ]
[e $U 38  ]
"229
[; ;I2C_conf/memory/memory.c: 229:     else
[e :U 37 ]
"230
[; ;I2C_conf/memory/memory.c: 230:         return array[memoryNumber].Tab[indice].PointerSize;
[e ) -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 1 `i ]
[e $UE 30  ]
[e :U 38 ]
"231
[; ;I2C_conf/memory/memory.c: 231: }
[e :UE 30 ]
}
"251
[; ;I2C_conf/memory/memory.c: 251: int getMemoryID(t_mem Pointer, u8 memoryNumber)
[v _getMemoryID `(i ~T0 @X0 1 ef2`**uc`uc ]
"252
[; ;I2C_conf/memory/memory.c: 252: {
{
[e :U _getMemoryID ]
"251
[; ;I2C_conf/memory/memory.c: 251: int getMemoryID(t_mem Pointer, u8 memoryNumber)
[v _Pointer `**uc ~T0 @X0 1 r1 ]
[v _memoryNumber `uc ~T0 @X0 1 r2 ]
"252
[; ;I2C_conf/memory/memory.c: 252: {
[f ]
"253
[; ;I2C_conf/memory/memory.c: 253:     if(*Pointer == ((void*)0))
[e $ ! == *U _Pointer -> -> -> 0 `i `*v `*uc 40  ]
"254
[; ;I2C_conf/memory/memory.c: 254:         return (-1);
[e ) -U -> 1 `i ]
[e $UE 39  ]
[e :U 40 ]
"255
[; ;I2C_conf/memory/memory.c: 255:     u8 i;
[v _i `uc ~T0 @X0 1 a ]
"256
[; ;I2C_conf/memory/memory.c: 256:     u8 indice = 10 + 1;
[v _indice `uc ~T0 @X0 1 a ]
[e = _indice -> + -> 10 `i -> 1 `i `uc ]
"257
[; ;I2C_conf/memory/memory.c: 257:     for(i = 0; i < 10 ; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 41  ]
[e $U 42  ]
[e :U 41 ]
"258
[; ;I2C_conf/memory/memory.c: 258:     {
{
"259
[; ;I2C_conf/memory/memory.c: 259:         if(Pointer == &array[memoryNumber].Tab[i].Pointer)
[e $ ! == _Pointer &U . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 0 44  ]
"260
[; ;I2C_conf/memory/memory.c: 260:         {
{
"261
[; ;I2C_conf/memory/memory.c: 261:             indice = i;
[e = _indice _i ]
"262
[; ;I2C_conf/memory/memory.c: 262:             break;
[e $U 42  ]
"263
[; ;I2C_conf/memory/memory.c: 263:         }
}
[e :U 44 ]
"264
[; ;I2C_conf/memory/memory.c: 264:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 41  ]
[e :U 42 ]
}
"265
[; ;I2C_conf/memory/memory.c: 265:     if(indice == (10 + 1))
[e $ ! == -> _indice `i + -> 10 `i -> 1 `i 45  ]
"266
[; ;I2C_conf/memory/memory.c: 266:         return (-1);
[e ) -U -> 1 `i ]
[e $UE 39  ]
[e :U 45 ]
"267
[; ;I2C_conf/memory/memory.c: 267:     if(array[memoryNumber].Tab[indice].State == 0)
[e $ ! == -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 2 `i -> 0 `i 46  ]
"268
[; ;I2C_conf/memory/memory.c: 268:         return (-1);
[e ) -U -> 1 `i ]
[e $UE 39  ]
[e $U 47  ]
"269
[; ;I2C_conf/memory/memory.c: 269:     else
[e :U 46 ]
"270
[; ;I2C_conf/memory/memory.c: 270:         return array[memoryNumber].Tab[indice].ID;
[e ) -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 3 `i ]
[e $UE 39  ]
[e :U 47 ]
"271
[; ;I2C_conf/memory/memory.c: 271: }
[e :UE 39 ]
}
"288
[; ;I2C_conf/memory/memory.c: 288: void getFreeFull(u8 memoryNumber)
[v _getFreeFull `(v ~T0 @X0 1 ef1`uc ]
"289
[; ;I2C_conf/memory/memory.c: 289: {
{
[e :U _getFreeFull ]
"288
[; ;I2C_conf/memory/memory.c: 288: void getFreeFull(u8 memoryNumber)
[v _memoryNumber `uc ~T0 @X0 1 r1 ]
"289
[; ;I2C_conf/memory/memory.c: 289: {
[f ]
"290
[; ;I2C_conf/memory/memory.c: 290:     u8 i;
[v _i `uc ~T0 @X0 1 a ]
"291
[; ;I2C_conf/memory/memory.c: 291:     memory[memoryNumber].use = 0;
[e = . *U + &U _memory * -> _memoryNumber `ux -> -> # *U &U _memory `ui `ux 1 -> -> 0 `i `uc ]
"292
[; ;I2C_conf/memory/memory.c: 292:     array[memoryNumber].indice = 0;
[e = . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 1 -> -> 0 `i `uc ]
"293
[; ;I2C_conf/memory/memory.c: 293:     for(i = 0; i < 10 ; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 49  ]
[e $U 50  ]
[e :U 49 ]
"294
[; ;I2C_conf/memory/memory.c: 294:         array[memoryNumber].Tab[i].State = 0;
[e = . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 2 -> -> 0 `i `uc ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 49  ]
[e :U 50 ]
}
"295
[; ;I2C_conf/memory/memory.c: 295: }
[e :UE 48 ]
}
"316
[; ;I2C_conf/memory/memory.c: 316: t_mem getMemoryFromID(u8 ID, u8 memoryNumber)
[v _getMemoryFromID `(**uc ~T0 @X0 1 ef2`uc`uc ]
"317
[; ;I2C_conf/memory/memory.c: 317: {
{
[e :U _getMemoryFromID ]
"316
[; ;I2C_conf/memory/memory.c: 316: t_mem getMemoryFromID(u8 ID, u8 memoryNumber)
[v _ID `uc ~T0 @X0 1 r1 ]
[v _memoryNumber `uc ~T0 @X0 1 r2 ]
"317
[; ;I2C_conf/memory/memory.c: 317: {
[f ]
"318
[; ;I2C_conf/memory/memory.c: 318:     u8 i;
[v _i `uc ~T0 @X0 1 a ]
"319
[; ;I2C_conf/memory/memory.c: 319:     t_mem dP;
[v _dP `**uc ~T0 @X0 1 a ]
"320
[; ;I2C_conf/memory/memory.c: 320:     u8 indice = 10 + 1;
[v _indice `uc ~T0 @X0 1 a ]
[e = _indice -> + -> 10 `i -> 1 `i `uc ]
"321
[; ;I2C_conf/memory/memory.c: 321:     for(i = 0; i < 10 ; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 53  ]
[e $U 54  ]
[e :U 53 ]
"322
[; ;I2C_conf/memory/memory.c: 322:     {
{
"323
[; ;I2C_conf/memory/memory.c: 323:         if(ID == array[memoryNumber].Tab[i].ID)
[e $ ! == -> _ID `i -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _i `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 3 `i 56  ]
"324
[; ;I2C_conf/memory/memory.c: 324:         {
{
"325
[; ;I2C_conf/memory/memory.c: 325:             indice = i;
[e = _indice _i ]
"326
[; ;I2C_conf/memory/memory.c: 326:             break;
[e $U 54  ]
"327
[; ;I2C_conf/memory/memory.c: 327:         }
}
[e :U 56 ]
"328
[; ;I2C_conf/memory/memory.c: 328:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 53  ]
[e :U 54 ]
}
"329
[; ;I2C_conf/memory/memory.c: 329:     if(indice == (10 + 1))
[e $ ! == -> _indice `i + -> 10 `i -> 1 `i 57  ]
"330
[; ;I2C_conf/memory/memory.c: 330:     {
{
"331
[; ;I2C_conf/memory/memory.c: 331:         dP = &nulPointer;
[e = _dP &U _nulPointer ]
"332
[; ;I2C_conf/memory/memory.c: 332:         return dP;
[e ) _dP ]
[e $UE 52  ]
"333
[; ;I2C_conf/memory/memory.c: 333:     }
}
[e :U 57 ]
"334
[; ;I2C_conf/memory/memory.c: 334:     if(array[memoryNumber].Tab[indice].State == 0)
[e $ ! == -> . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 2 `i -> 0 `i 58  ]
"335
[; ;I2C_conf/memory/memory.c: 335:     {
{
"336
[; ;I2C_conf/memory/memory.c: 336:         dP = &nulPointer;
[e = _dP &U _nulPointer ]
"337
[; ;I2C_conf/memory/memory.c: 337:         return dP;
[e ) _dP ]
[e $UE 52  ]
"338
[; ;I2C_conf/memory/memory.c: 338:     }
}
[e $U 59  ]
"339
[; ;I2C_conf/memory/memory.c: 339:     else
[e :U 58 ]
"340
[; ;I2C_conf/memory/memory.c: 340:     {
{
"341
[; ;I2C_conf/memory/memory.c: 341:         dP = &array[memoryNumber].Tab[indice].Pointer;
[e = _dP &U . *U + &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 * -> _indice `ux -> -> # *U &U . *U + &U _array * -> _memoryNumber `ux -> -> # *U &U _array `ui `ux 0 `ui `ux 0 ]
"342
[; ;I2C_conf/memory/memory.c: 342:         return dP;
[e ) _dP ]
[e $UE 52  ]
"343
[; ;I2C_conf/memory/memory.c: 343:     }
}
[e :U 59 ]
"344
[; ;I2C_conf/memory/memory.c: 344: }
[e :UE 52 ]
}
